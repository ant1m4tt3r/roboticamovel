<?xml version="1.0"?>
<launch>
    <node pkg="thanos" type="encoder_node.py" name="right_encoder_node" output="screen" >
        <rosparam>
        NUMERO_FAIXAS_ENCODER: 20
        PINO_ENCODER: 11
        RATE: 15 <!--Taxa de amostragem ROS -->
        TOPIC_VEL: "right_wheel_encoder" 
        FILTER_FACTOR: 0.5 <!--Intensidade do filtro -->
        </rosparam >
    </node>
    <node pkg="thanos" type="encoder_node.py" name="left_encoder_node" output="screen" >
        <rosparam>
        NUMERO_FAIXAS_ENCODER: 20
        PINO_ENCODER: 7
        RATE: 15 <!--Taxa de amostragem ROS -->
        TOPIC_VEL: "left_wheel_encoder"
        FILTER_FACTOR: 0.5 <!--Intensidade do filtro --> 
        </rosparam >
    </node>
    <node pkg="thanos" type="odometry_node.py" name="odometry_node" output="screen">
        <rosparam>
        RATE: 15
        RAIO_DAS_RODAS: 0.033
        DIST_ENTRE_RODAS: 0.146
        </rosparam>
    </node>
    <node pkg="thanos" type="motor_node.py" name="motor_node"  output="screen">
        <rosparam>
        RATE: 10 <!--Taxa de amostragem ROS -->
        </rosparam>
    </node>
    <node pkg="thanos" type="position_controller.py" name="position_controller"  output="screen">
        <rosparam>
        RATE: 40 <!--Taxa de amostragem ROS -->
        </rosparam>
    </node>
</launch>

